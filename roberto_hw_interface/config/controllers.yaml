Roberto:

    joints_update:
      type: joint_state_controller/JointStateController
      publish_rate: 50

    actuator_pos_controller:
      type: position_controllers/JointPositionController
      joint: actuator_joint

    bscrew_pos_controller:
      type: position_controllers/JointPositionController
      joint: bscrew_joint

#    bscrew_vel_controller:
#      type: velocity_controllers/JointVelocityController
#      joint: bscrew_joint 
#
#    actuator_vel_controller:
#      type: velocity_controllers/JointVelocityController
#      joint: actuator_joint 
#
    auger_controller:
      type: velocity_controllers/JointVelocityController
      joint: auger_joint

    left_wheel_controller:
      type: velocity_controllers/JointVelocityController
      joint: wheel_joint_0

    right_wheel_controller:
      type: velocity_controllers/JointVelocityController
      joint: wheel_joint_1

#    drivetrain_controller:
#      type        : "diff_drive_controller/DiffDriveController"
#      left_wheel  : 'wheel_joint_0'
#      right_wheel : 'wheel_joint_1'
#      publish_rate: 50.0               # default: 50
#      pose_covariance_diagonal : [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
#      twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
#
#      # Wheel separation and diameter. These are both optional.
#      # diff_drive_controller will attempt to read either one or both from the
#      # URDF if not specified as a parameter
#      wheel_separation : 0.508
#      wheel_radius : 0.152
#
#      # Wheel separation and radius multipliers
#      wheel_separation_multiplier: 1.0 # default: 1.0
#      wheel_radius_multiplier    : 1.0 # default: 1.0
#
#      # Velocity commands timeout [s], default 0.5
#      cmd_vel_timeout: 0.25
#
#      # Base frame_id
#      base_frame_id: "base_link"
#
#      # Velocity and acceleration limits
#      # Whenever a min_* is unspecified, default to -max_*
#      linear:
#        x:
#          has_velocity_limits    : true
#          max_velocity           : 0.10  # m/s
#          min_velocity           : -0.10 # m/s
#          has_acceleration_limits: true
#          max_acceleration       : 0.025  # m/s^2
#          min_acceleration       : -0.025 # m/s^2
#          has_jerk_limits        : false
#          max_jerk               : 2.0  # m/s^3
#      angular:
#        z:
#          has_velocity_limits    : true
#          max_velocity           : 1.0472  # rad/s
#          has_acceleration_limits: true
#          max_acceleration       : 0.5  # rad/s^2
#          has_jerk_limits        : true
#          max_jerk               : 1 # rad/s^3
    
#    JointA_EffortController:                                               # Name of the controller
#      type: effort_controllers/JointPositionController         # Since JointA uses effort interface this controller type is  used      
#      joint: JointA                                                                # Name of the joint for which this controller belongs to.
#      pid: {p: 100.0, i: 10.0, d: 1.0}                                    # PID values
#    
#    JointB_EffortController:                                             
#      type: effort_controllers/JointPositionController        # Since JointB uses effort interface this controller type is  used   
#      joint: JointB                                                                 
#      pid: {p: 1.0, i: 1.0, d: 0.0}
#
#    JointC_PositionController:
#      type: position_controllers/JointPositionController    # Since JointC uses position interface this controller type is  used 
#      joint: JointC
#
#    JointD_VelocityController:
#      type: velocity_controllers/JointVelocityController
#      joint: JointD
#
#    JointE_VelocityController:
#      type: velocity_controllers/JointVelocityController
#      joint: JointE
#
#    JointR_EffortController:
#      type: effort_controllers/JointVelocityController
#      joint: JointR
#      pid: {p: 0.00003, i: 0.00007, d: 0, i_clamp_min: -150, i_clamp_max: 150, antiwindup: True }
#
#    JointL_EffortController:
#      type: effort_controllers/JointVelocityController
#      joint: JointL
#      pid: {p: 0.00003, i: 0.00007, d: 0, i_clamp_min: -150, i_clamp_max: 150, antiwindup: True }
#